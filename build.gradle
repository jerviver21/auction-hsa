buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'auction-hsa'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


//Se configuran los sources folder de pruebas de modo que se pueda separar la ejecución de las pruebas 
//de integración de las pruebas de unidad
sourceSets {
	integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    
    //security
    compile("org.springframework.boot:spring-boot-starter-security")
    
    //security
    compile("org.springframework.security.oauth:spring-security-oauth2") {
        exclude(module: 'jackson-mapper-asl') // We already have a more recent jackson via Spring Boot
    }   
    

    
    // https://mvnrepository.com/artifact/postgresql/postgresql
	compile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'
	
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
	compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.11.Final'
	
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
	compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.3.11.Final'	

	// https://mvnrepository.com/artifact/org.hibernate/hibernate-validator
	compile group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.2.Final'
	
	// https://mvnrepository.com/artifact/org.hibernate/hibernate-envers
	compile group: 'org.hibernate', name: 'hibernate-envers', version: '4.3.11.Final'
	
	// https://mvnrepository.com/artifact/org.springframework/spring-orm
	compile group: 'org.springframework', name: 'spring-orm', version: '4.3.2.RELEASE'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-hibernate4
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: '2.8.1'
	
	// https://mvnrepository.com/artifact/org.springframework/springloaded
	compile group: 'org.springframework', name: 'springloaded', version: '1.2.6.RELEASE'
	

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.0.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-test
	testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '4.1.3.RELEASE'
	

	
}




//Permite correr desde gradle spring boot.  #gradle bootRun, el profile se cuadra desde esta variable en caso de usar jenkins se debe investigar la forma
def profiles = 'prod'

bootRun {
  args = ["--spring.profiles.active=" + profiles]
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

//Se configuran los sources folder de pruebas de modo que se pueda separar la ejecución de las pruebas 
//de integración de las pruebas de unidad
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

//Si queremos que integrationTest se corran dentro del build process
//check.dependsOn integrationTest
//integrationTest.mustRunAfter test


//Tarea para ejecutar la aplicación desde gradle y configurar los diferentes perfiles de ejecución
//Se ejecuta el programa con: gradle -PmainClass=edu.auctionhsa.Application execute
/*task execute(type:JavaExec) {
   main = mainClass
   classpath = sourceSets.main.runtimeClasspath
}*/
